plugins {
    id 'java'
    id 'org.graalvm.buildtools.native' version '0.10.1'
    id 'com.github.node-gradle.node' version '7.0.2'
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'maven-publish'
}

group = 'com.github.danielbinder'
version '1.7.0'

graalvmNative.binaries.main.imageName = "LogiVis-${version}"

bootJar.dependsOn('test')

springBoot {
    setMainClass('main.Main')
}

node {
    download = false
    nodeProjectDir.set(new File('./src/main/javascript'))
}

tasks.named('npm_run_build').get().onlyIf {
    gradle.taskGraph.hasTask(':bootJar')
}

tasks.register('moveFrontend', Copy) {
    new File('./src/main/resources/public').deleteDir()
    new File('./src/main/resources/public').mkdir()

    from './src/main/javascript/build'
    into './src/main/resources/public'
}

moveFrontend.dependsOn 'npm_run_build'
processResources.dependsOn 'moveFrontend'

compileJava {
    dependsOn 'moveFrontend'
    options.compilerArgs << "-Xlint:all"
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

test {
    useJUnitPlatform()
    testLogging {
        events 'passed', 'skipped', 'failed'
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

publishing {
    publications {
        pubJar(MavenPublication) {
            artifact bootJar
        }
    }
}